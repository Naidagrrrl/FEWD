/* Media Queries to handle mobile */

@media only screen and (max-width: 768px) {
    /* The container is set to 90% on larger
    screens, we'll make it 100% on smaller screens */
    .container {
      width: 100%;
    }
    /* Make all of our col classes 100% the
    width screen */
    [class*="col-"] {
        width: 100%;
    }
    /* Make the header a little smaller */
    header {
      padding-bottom: 1rem;
    }
    /* The navigation links are set to display block
    so they take the width of the screen */
    header nav li {
      display: block;
    }
    /* We need more specificity to remove the padding
    on the nav links and we're adding line-height to
    create more space between them so they are easier
    to click. */
    header nav li {
      padding: 0;
      line-height: 2.5;
    }
    /* We're removing the logo block from the flow of
    the document so that the menu toggle will be at the
    top of the page */
    .brand {
      position: absolute;
      top: 1.25rem;
      left: 0;
    }
    /* By default, the menu toggle is set to display: none
    We want it show on mobile screens */
    .navtoggle {
      display: inline-block;
    }
    /* We use a couple of styled span elements to create a
    hamburger menu toggle */
    .navtoggle span {
      display: block;
      width: 2rem;
      height: .25rem;
      margin-bottom: .25rem;
      position: relative;
      background: #cdcdcd;
      border-radius: .25rem;
      z-index: 1;
      transform-origin: .25rem top;
      transition: transform .5s cubic-bezier(0.77,0.2,0.05,1.0),
      background .5s cubic-bezier(0.77,0.2,0.05,1.0),
      opacity .55s ease;
    }
    /* Our hamburg menu will change to an x when the menu is open.
    To do this, we'll hide the first span, and then turn the others
    in 45 degrees in opposite directions.  The transform origin sets
    the point which the rotation and move originates */
    .navtoggle span:first-child {
      transform-origin: 0;
    }

    .navtoggle span:last-child {
      transform-origin: left bottom;
    }
    /* When the open class is added to the navtoggle, the
    span is rotated 45 degrees clockwise. Because the first
    span is hidden with the next declaration and the last-child
    declaration overrides this one, it is only applied to the second
    span (line). */
    .navtoggle.open span {
      opacity: 1;
      transform: rotate(45deg) translate(0,-1rem);
    }
    /* This effectively "hides" the first span element when the
    menu is open. */
    .navtoggle.open span:first-child {
      opacity: 0;
      transform: rotate(0deg) scale(0, 0);
    }
    /* This span overrides 45 degrees clockwise rotation and for
    the last span. */
    .navtoggle.open span:last-child {
      transform: rotate(-45deg) translate(.5rem,.5rem);
    }
    /* We want the entire navigation to "grow" into place from the
    top down. When the navigation is closed, the height, visibility
    and Y-scale are set to none.  We also set the transform-orgin
    here so that the menu scales from the top instead of the middle.
    The transition is added to make the open/closing smooth. */
    .nav {
      visibility: hidden;
      height: 0;
      transform: scale(1,0);
      transform-origin: top;
      transition: transform .5s, height .5s;
    }
    /* Finally, when the open class is added to the navtoggle, we
    "open" the menu by setting the visibility, Y-scale and height.
    We know the height because the line-height is set to 2.5 (thus
    2.5 * 5 menu items). */
    .navtoggle.open + .nav {
      visibility: visible;
      transform: scale(1,1);
      height: 12.5rem;
    }

}
